/* SIMAURIA
 * Archivo: /lib/web/rorla.c
 * Utilidad: Se encarga de generar la orla.
 *
 * [m] Mirill@Simauria
 *
 * 28/06/00 [m] Comienza la creación del archivo.
 *
 */
#include "/secure/config.h"
#include "/secure/wizlevels.h"

public string Orla()
{

string str;
mixed orlastr2,orlastr,orlmap,aux,save, players;
int i, j;

    str = "";
    orlastr = get_dir("/players/???*");
    orlmap = ([ ]);
    save = get_dir("/save/*")||({}) - ({".", ".."});
    orlastr2 = get_dir("/fotos/*.jpg");
    for (i = 0; i < sizeof(orlastr2); i++) {

          aux = orlastr2[i];
          aux = aux[0..strlen(aux)-5];
          orlastr2[i] = aux;

    }

// Crea la primera parte de la tabla, mirando los Gods.

     for (i = 0; i < sizeof(orlastr); i++) {
      if (IS_GOD(orlastr[i]) == 1) {
       if( member(orlastr2, orlastr[i]) == -1 )
          str += (orlastr[i]+":foto.jpg;");
        else
          str += (orlastr[i]+":"+orlastr[i]+".jpg;");
    }
  }
  str += "\n%A%\n";
// Crea la tabla correspondiente a los Arch

    for (i = 0; i < sizeof(orlastr); i++) {
      if (IS_GOD(orlastr[i]) == 1) { }
         else {
      if (IS_ARCH(orlastr[i]) == 1) {

       if( member(orlastr2, orlastr[i]) == -1 )

          str += (orlastr[i]+":foto.jpg;");
        else
          str += (orlastr[i]+":"+orlastr[i]+".jpg;");
      }
   }
 }
  str += "\n%W%\n";
// Crea la tabla de los Wizs normales
    for (i = 0; i < sizeof(orlastr); i++)
    {
      if( !IS_ARCH( orlastr[i] ) )
       {
          if (IS_LORD(orlastr[i]))
             str += ("L:");
          else if (IS_VICE(orlastr[i]))
               str += ("V:");
            else
               str +=("W:");
            if( member(orlastr2, orlastr[i]) == -1 )
               str += (orlastr[i]+":foto.jpg;");
            else
               str += (orlastr[i]+":"+orlastr[i]+".jpg;");
       }
     }

    for (i=0; i<sizeof(save); i++)
    {
        players = get_dir("/save/"+save[i]+"/")||({}) - ({".", ".."});
        for (j=0; j<sizeof(players); j++)
        {
                if (!IS_LEARNER(players[j][0..<3]) && IS_JAN(players[j][0..<3]))
                      str += ("J:"+players[j][0..<3]+":null");
        }
    }
/*
// Crea la parte de la tabla para los players. Solo para JAN.
    for (i=0; i<sizeof(players); i++)
    {
        l_players = get_dir("/save/"+players[i])||({}) - ({".", ".."});




    for (i=2; i<sizeof(players); i++)
    {
     l_players=get_dir("/save/"+players[2]+"/??*");
     for (j=2; j<sizeof(l_players); j++)
     {
      if (l_players[j][strlen(l_players[j])-1] == 'o')
      {
//      if (!(IS_LEARNER(l_players[j][0..<3])))
//      {
//       if (IS_JAN(l_players[j][0..<3]))
//       {
      str += ("J:"+l_players[j][0..<3]+":null");
        }
//       }
//      }
     }
    }
*/
   return str;
}

